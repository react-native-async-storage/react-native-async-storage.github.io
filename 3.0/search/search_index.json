{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Async Storage","text":"<p>Async Storage is asynchronous, unencrypted, persistent, key-value storage for your React Native application. It provides a simple API compatible with the Web Storage API, with a few extensions for batch operations and multi-database support.</p>"},{"location":"#supported-platforms","title":"Supported platforms","text":"<ul> <li>Android (SQLite backend via Room KMP)</li> <li>iOS (SQLite backend via Room KMP)</li> <li>Web (IndexedDB backend)</li> <li>macOS (SQLite backend via Room KMP)</li> <li>Windows (legacy fallback, single database only)</li> </ul>"},{"location":"#installation","title":"Installation","text":"<pre><code># using npm\nnpm install @react-native-async-storage/async-storage\n\n# using yarn\nyarn add @react-native-async-storage/async-storage\n</code></pre> <p>On iOS/macOS, don\u2019t forget to install pods:</p> <pre><code># inside macos/ios directory\npod install\n</code></pre>"},{"location":"#usage","title":"Usage","text":""},{"location":"#basic","title":"Basic","text":"<pre><code>import { createAsyncStorage } from \"@react-native-async-storage/async-storage\";\n\n// Create a storage instance\nconst storage = createAsyncStorage(\"appDB\");\n\nasync function demo() {\n  // save value under \"userToken\" key\n  await storage.setItem(\"userToken\", \"abc123\");\n\n  // read value stored at \"userToken\" key\n  const token = await storage.getItem(\"userToken\");\n  console.log(\"Stored token:\", token);\n\n  // remove value from storage\n  await storage.removeItem(\"userToken\");\n}\n</code></pre>"},{"location":"#multi-item-operations","title":"Multi-item operations","text":"<p>Async Storage supports batch operations for efficiency:</p> <pre><code>async function demo() {\n  // save multiple values at once\n  await storage.setMany({\n    theme: \"dark\",\n    language: \"en\",\n  });\n\n  // Retrieve multiple values\n  const values = await storage.getMany([\"theme\", \"language\", \"different\"]);\n  console.log(values); // { theme: \"dark\", language: \"en\", different: null }\n\n  // Remove multiple values\n  await storage.removeMany([\"theme\", \"language\"]);\n}\n</code></pre>"}]}